/*
 * app_led.c
 *
 *  Created on: Sep 15, 2022
 *      Author: Gabor
 */

#include "drv_gpio.h"
#include "iodef.h"

#define LED_TASK_PERIOD     ( 1000u )

GOS_STATIC void_t APP_LedTask (void_t);

/**
 * LED task descriptor.
 */
GOS_STATIC gos_taskDescriptor_t ledTaskDesc =
{
	.taskFunction       = APP_LedTask,
	.taskName           = "app_led_task",
	.taskPriority       = 0,
	.taskPrivilegeLevel = GOS_TASK_PRIVILEGE_USER,
	.taskStackSize      = 0x300
};

/*
 * LED initializer
 *
 * Registers the LED task in the scheduler.
 */
gos_result_t APP_LedInit (void_t)
{
	/*
	 * Local variables.
	 */
	gos_result_t ledInitResult = GOS_SUCCESS;

	/*
	 * Function code.
	 */
	ledInitResult = gos_taskRegister(&ledTaskDesc, NULL);

	return ledInitResult;
}

/*
 * LED task
 *
 * Every 1 second, it toggles the user LED.
 */
GOS_STATIC void_t APP_LedTask (void_t)
{
	/*
	 * Function code.
	 */
	for (;;)
	{
		drv_gpioTgglePin(IO_USER_LED);
		gos_taskSleep(LED_TASK_PERIOD);
	}
}
